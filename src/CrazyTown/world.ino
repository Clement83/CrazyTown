
//store the different sprites in PROGMEM to save RAM

//sprite 0
const byte Eau[] PROGMEM = {16,16,0x0,0x0,0x0,0x0,0x0,0x2,0x8,0x5,0x14,0x0,0x0,0x20,0x0,0x50,0x0,0x0,0x0,0x0,0x4,0x0,0xA,0x0,0x0,0x20,0x0,0x50,0x20,0x0,0x50,0x0,0x0,0x0,};
//sprite 1
const byte Fleure[] PROGMEM = {16,16,0x0,0x0,0x50,0x0,0x20,0x28,0x50,0x10,0x0,0x28,0x0,0x0,0x0,0x0,0x1,0x40,0x0,0x80,0x1,0x40,0x0,0x0,0x0,0x14,0x28,0x8,0x10,0x14,0x28,0x0,0x0,0x0,};
//sprite 2
const byte Foret[] PROGMEM = {16,16,0x0,0x0,0x10,0x0,0x6D,0x0,0x54,0x8,0xAA,0x14,0x54,0x8,0x6C,0x20,0x10,0x0,0x0,0x10,0x0,0x6C,0x4,0x54,0x10,0xAA,0x28,0x54,0x10,0x6C,0x0,0x10,0x0,0x0,};
//sprite 3
const byte Pavillon[] PROGMEM = {16,16,0x0,0x0,0x7F,0xFE,0x6B,0x56,0x57,0xAA,0x7F,0xFE,0x6B,0x56,0x57,0xAA,0x7F,0xFE,0x6B,0x56,0x57,0xAA,0x7F,0xFE,0x40,0x2,0x40,0x2,0x40,0x2,0x7F,0xFE,0x0,0x0,};
//sprite 4
const byte RoofTop[] PROGMEM = {16,16,0x0,0x0,0x7F,0xFE,0x60,0x6,0x5F,0xFA,0x50,0xA,0x52,0xA,0x50,0x4A,0x50,0xA,0x50,0xA,0x56,0x2A,0x56,0xA,0x50,0xA,0x5F,0xFA,0x60,0x6,0x7F,0xFE,0x0,0x0,};
//sprite 5
const byte Usine[] PROGMEM = {16,16,0x0,0x0,0x38,0x0,0x7D,0xFE,0x7D,0x2,0x7D,0x2,0x39,0xFE,0x7F,0x2,0x40,0x2,0x40,0x2,0x40,0x2,0x7F,0xFE,0x2,0x0,0x25,0x3C,0x52,0x3C,0x20,0x0,0x0,0x0,};
//sprite 6
const byte Usine2[] PROGMEM = {16,16,0x0,0x20,0x0,0x50,0x38,0x20,0x47,0xFE,0x55,0x2,0x44,0x82,0x38,0xF2,0x21,0xA,0x12,0x66,0xA,0x96,0x6,0x96,0x76,0x66,0x75,0xA,0x4,0xF2,0x7,0xFE,0x0,0x0,};



const byte * GetSpriteById(byte idSprite)
{
  switch(idSprite)
  {
    case 0 :
    return Eau;
    break;
    case 1 :
    return Fleure;
    break;
    case 2 :
    return Foret;
    break;
    case 3 :
    return Pavillon;
    break;
    case 4 :
    return RoofTop;
    break;
    case 5 :
    return Usine2;
    break;
    case 6 :
    return Usine;
    break;
  }
}

#define NB_ZONE 8
//x1,y1, x2 ,y2, tuile
const byte Zones[NB_ZONE*5] PROGMEM = 
{
  0,0,127,31,3,
  0,32,32,62,0,
  47,94,86,116,0,
  42,35,93,57,5,
  14,62,113,93,6,
  98,35,110,44,3,
  111,49,119,60,3,
  47,94,127,127,4,
};





#define WORLD_W 128
#define WORLD_H 128
const byte world[(WORLD_W/8)*WORLD_H] PROGMEM = {
B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,
B10000000,B11111111,B11111111,B11111111,B10000000,B00000000,B01111111,B11111111,B11100000,B00000000,B00000000,B00000111,B11100000,B11111111,B11111111,B11111111,
B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01111011,B11011101,B11100111,B11101110,B00000000,B00000000,B11111111,
B11111101,B11111111,B11000000,B00000000,B00011111,B11111110,B00000000,B00000000,B00000111,B01111011,B11011101,B11100111,B11101111,B00000000,B01111110,B11111111,
B11111001,B11111111,B10001111,B11100111,B10000000,B00111110,B01111111,B11110011,B11100111,B01111011,B11011101,B11100111,B11101111,B01111111,B01111110,B11111111,
B11111011,B11111111,B00011111,B11100111,B10000000,B00110000,B01111111,B11110011,B11100111,B00000000,B00000001,B11100111,B11100000,B01111111,B01111110,B11111111,
B11111011,B11111110,B00111111,B11100111,B11111111,B00110000,B01111111,B11110011,B11100111,B01111011,B11011101,B11100111,B11111111,B11111111,B01111110,B11111111,
B11111011,B11111100,B01111111,B11100111,B11111111,B00110011,B01111111,B11110011,B11100111,B01111011,B11011101,B11100000,B00111111,B11111111,B01111100,B11111111,
B11111011,B11111000,B11100000,B00000111,B11111111,B00110011,B01111111,B11110011,B11100111,B01111011,B11011101,B11100111,B10000000,B11111111,B00000001,B11111111,
B11111011,B11110001,B11001111,B11100111,B11000000,B00110011,B01111111,B11110011,B11100111,B00000000,B00000001,B11100111,B10111110,B11111111,B01111111,B11111111,
B11111011,B11100011,B10011111,B11100111,B11011111,B00110011,B01100000,B00100011,B11100111,B11111111,B11111111,B11100111,B10111110,B11111111,B01111111,B11111111,
B11111011,B11100111,B00111111,B11100111,B11011111,B00110011,B01101111,B10000011,B11100111,B00000000,B00000000,B11100000,B00111110,B11111111,B01111110,B00001111,
B11111011,B11100110,B01111111,B11100111,B11011111,B00110011,B01101111,B10000111,B11100111,B00000000,B00000000,B11100111,B11111110,B11111111,B01111100,B00000111,
B11111011,B11100110,B11000000,B00000011,B11011111,B00110011,B01101111,B10111111,B11100111,B00111111,B10011110,B01100111,B11111110,B11111110,B01111000,B00000011,
B11100000,B11100100,B11011011,B11011000,B00011111,B00110011,B01101111,B10111111,B11100111,B00111111,B00011111,B01100000,B00111110,B11111100,B11110000,B00000011,
B11100000,B11100001,B11011011,B11011011,B11000000,B00000000,B00000000,B00000000,B00000000,B00111110,B00111111,B01100111,B10000000,B00000001,B11100000,B01000011,
B11100100,B11100111,B11011001,B10011011,B11111111,B00000011,B11111000,B00000000,B00000000,B01111100,B01111111,B01100111,B10111111,B11111111,B11000000,B11000011,
B11100000,B11100111,B11011001,B10011011,B11111111,B11001111,B11111001,B11111111,B11111111,B11111000,B11111111,B01100000,B00111111,B11111111,B10000001,B11000011,
B11100000,B11100111,B11011101,B10111011,B11111111,B11001110,B00000001,B11111111,B11000000,B00000001,B11111111,B01100111,B11111111,B11111111,B00000011,B11000011,
B11111011,B11100111,B11011101,B10111011,B11111100,B00000000,B11111001,B11111111,B11000000,B00000011,B11111111,B01100111,B11111111,B11111110,B00000111,B11000011,
B11111011,B11100111,B11000000,B00000011,B11111000,B00001111,B11111001,B11111111,B11001111,B11111111,B11111111,B00000111,B11111111,B11111110,B00001111,B11000011,
B11111011,B11100111,B11111100,B11111111,B11110000,B11111111,B11111000,B00000000,B00001111,B11111111,B11111111,B11010011,B00000000,B00000000,B00011111,B11000011,
B11111011,B11100111,B11111100,B11111111,B11110011,B11111111,B11111000,B00000000,B00001111,B11111111,B11111111,B11010000,B00000000,B00000000,B00111111,B11000011,
B11111011,B11100111,B11111100,B11111111,B11110011,B11111111,B11111001,B11111111,B11100111,B11111111,B11111111,B11010000,B01111000,B00000000,B01111111,B11000011,
B11111000,B00000111,B11111100,B11111111,B11110011,B11111111,B11111001,B11111111,B11110111,B11111111,B11111111,B11011100,B11111000,B00000000,B11111111,B11000011,
B11111011,B11100111,B11111100,B11111111,B11110010,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B11111001,B11111111,B11111111,B11000011,
B11100011,B11100011,B11111100,B11111111,B11110010,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B11110001,B11111111,B11111111,B11000011,
B10001111,B11110011,B11111100,B11111111,B11110010,B01111111,B11111111,B11111110,B11111100,B11111111,B11111111,B11100100,B11100011,B11111111,B11111111,B11000011,
B10111111,B11110001,B11111100,B11111111,B11110010,B01111111,B11110000,B00000000,B11111100,B11111111,B11111111,B11100100,B10000111,B11111111,B11111111,B11000011,
B10111111,B11111000,B11111100,B11111111,B11110010,B01111111,B11110111,B11111111,B10001100,B11111111,B11100000,B01100100,B00011111,B11111111,B11111111,B11000011,
B10011111,B11111100,B01111100,B11111111,B11110010,B01111111,B11110111,B11111111,B10101100,B00000000,B00000000,B01100100,B00111111,B11111111,B11111111,B11000011,
B11011111,B11111110,B00000000,B00000000,B00000010,B00000000,B00000111,B00000001,B10100100,B00000000,B00000110,B01100100,B11111111,B11111111,B11111111,B11000011,
B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,B10110111,B11101111,B11111110,B01100100,B11111000,B00000001,B11111111,B11000111,
B11111111,B11111111,B11100111,B11111111,B10110000,B01111111,B01110000,B00111001,B10110000,B00000000,B00000010,B01100100,B11110000,B00000000,B01111111,B11000111,
B11111111,B11111111,B11000111,B11111111,B10110110,B01000001,B01111111,B00111001,B10011111,B10111111,B11111010,B00000100,B11100011,B11111100,B01111111,B11000111,
B11111111,B11111111,B10001111,B11111111,B10110110,B01011101,B00000000,B00111000,B00011100,B00111111,B10001010,B00000100,B11100111,B11111110,B01111111,B11000111,
B11111111,B11111111,B00011111,B11111111,B10110110,B01011101,B00000000,B00111000,B00000001,B00000000,B00100010,B01100100,B11001111,B11111110,B01111111,B11000111,
B11111111,B11111110,B00111111,B11111111,B10110110,B01011101,B00111111,B00111111,B11111011,B11101111,B10111110,B01100100,B11001111,B11111110,B01111111,B10000111,
B11111111,B11111100,B01111111,B11111111,B10110010,B01010001,B00111110,B00000000,B11111010,B00101111,B10111110,B01100100,B11001100,B00000110,B01111111,B10000111,
B11111111,B11111000,B11111111,B11111111,B10111010,B01010001,B00111110,B01111110,B11111000,B10101111,B10111110,B01100100,B11001101,B01010110,B01111111,B10000111,
B11111111,B11110001,B11111111,B11111111,B10111010,B01010001,B00111110,B01111110,B11111101,B10101111,B10000000,B01100100,B11001101,B01010110,B01111111,B00001111,
B11111111,B11100011,B11111111,B11111111,B10111010,B01011111,B00111110,B01110000,B00000001,B10001111,B10000000,B01100100,B11000101,B01010110,B00111111,B00001111,
B11111111,B11000011,B11111111,B11111111,B10111010,B01011111,B00111110,B01110000,B00000000,B00000000,B00111111,B11100100,B11100101,B01010111,B00011110,B00001111,
B11111111,B11000011,B11111111,B11111111,B10001010,B01000000,B00111110,B01110011,B11111111,B11111111,B11111111,B11100100,B11100000,B00000111,B10000100,B00001111,
B11111111,B11000011,B11111111,B11111111,B10101010,B01000000,B00111110,B00000011,B11111111,B11100000,B00000000,B00000100,B11100001,B11111111,B11000000,B00011111,
B11111111,B11000011,B11111111,B11111111,B10101010,B01111111,B10111110,B00000011,B11111111,B11100000,B00000000,B00000100,B11110000,B11111111,B11100000,B00011111,
B11111111,B11000011,B11111111,B11111111,B10101010,B01111111,B10111111,B11110000,B00000111,B11100111,B11101110,B11111100,B11111100,B00111111,B11111100,B00011111,
B11111111,B11000011,B11111111,B11111111,B10101010,B01111111,B10111111,B11111111,B11110111,B11100111,B11101110,B00000000,B11111110,B00001111,B11111110,B00011111,
B11111111,B11000011,B11111111,B11111111,B10100010,B01100000,B00111111,B11111111,B11110111,B11100111,B00001110,B11111100,B11111111,B10000111,B11111110,B00001111,
B11111111,B11000011,B11111111,B11111111,B10111110,B01101111,B11111111,B11111111,B11110011,B11100111,B01111110,B00001100,B11111111,B11100001,B11111111,B00001111,
B11111111,B11000011,B11111111,B11111111,B10100000,B01101111,B11100000,B00000000,B11111011,B11100111,B00000000,B10101100,B00000001,B11110001,B11111111,B00001111,
B11111111,B11000011,B11111111,B11111111,B10000000,B01101111,B11101111,B11111110,B11111011,B11100111,B01111111,B10100000,B00000001,B11111001,B10000011,B10000111,
B11111111,B11000011,B11111111,B11111111,B10001110,B01101111,B11101111,B11100000,B00000011,B11100111,B01111111,B10111101,B11111000,B11111001,B10111011,B10000111,
B11111111,B11000011,B11111111,B11111111,B10011110,B01100000,B00000000,B00001111,B11111111,B11100100,B00000000,B00011101,B11111100,B01111001,B10000011,B11000011,
B11111111,B11000011,B11111111,B11111111,B10011110,B01111111,B11101111,B11111111,B11111111,B11100101,B11110111,B11011001,B11111100,B01111000,B00111011,B11100001,
B11111111,B11000011,B11111111,B11111111,B10011110,B01111111,B11101111,B11111111,B11111111,B11100101,B11110111,B11011011,B11111110,B01111001,B10000011,B11100001,
B11111111,B11000011,B11111111,B11111111,B10011110,B01111111,B11101111,B11111111,B11111111,B11100101,B11110111,B11011011,B11111110,B01111001,B10111011,B11100001,
B11111111,B11000011,B11111111,B11111111,B10000010,B01111111,B11101111,B11111111,B11111111,B11100100,B11110000,B00011011,B11111110,B01111001,B10000011,B11000011,
B11111111,B11000011,B11111111,B11111111,B10111010,B00000000,B00000000,B00000000,B00000000,B00000110,B11110111,B11111011,B11111110,B01111001,B10111011,B11000011,
B11111111,B11000011,B11111111,B11111111,B10111010,B00000000,B00000000,B00000000,B00000000,B00000110,B11110111,B11111001,B11111110,B01111001,B10000011,B10000111,
B11111111,B11000011,B11111111,B11111111,B10111011,B11111111,B11111111,B11111111,B11101111,B11111110,B00000011,B11111101,B11111110,B01111001,B11011111,B00001111,
B11111111,B11000011,B11111111,B11111111,B10111000,B00000001,B11111110,B00000000,B11101111,B11000110,B11111000,B00000100,B00000000,B01111001,B11011110,B00011111,
B11111111,B11000010,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111111,B11110000,B00000000,B01111001,B11011100,B00111111,
B11111111,B11000010,B00000000,B00000000,B00111111,B11111100,B00000000,B11111111,B00000000,B00010000,B11111111,B11111111,B11111110,B01111000,B00011100,B00111111,
B11111111,B11000010,B11111111,B11100111,B10011111,B11111111,B11111111,B11111111,B00111111,B01111001,B11111111,B11111111,B11111110,B01111001,B11111100,B00111111,
B11111111,B11000010,B11111111,B11100111,B11001111,B11111111,B11000000,B11111111,B00111100,B01111001,B11111111,B11111111,B11111110,B01111001,B11111100,B00111111,
B11111111,B11000010,B11111111,B11100111,B11100011,B11111111,B10011110,B11111111,B00110001,B11111001,B11111111,B11111111,B11111110,B01111001,B11111100,B00111111,
B11111111,B11000010,B11111111,B11100001,B11111000,B00000000,B00111110,B11111111,B00110111,B11111001,B11111111,B11111111,B11111110,B01111001,B11111100,B00111111,
B11111111,B11000010,B11111111,B11100000,B11111111,B11111111,B10011110,B00000000,B00000000,B00000000,B00000000,B01111111,B11111110,B01111001,B11111100,B00111111,
B11111111,B11000010,B11111111,B11100100,B00111111,B11111111,B11000000,B00000000,B00000000,B00000000,B00000000,B01111111,B11111110,B01111001,B11111100,B00111111,
B11111111,B11000010,B11111111,B11000111,B00001111,B11111111,B11111100,B11111111,B00110111,B11111001,B11011110,B01111111,B11111110,B01111001,B11111100,B00111111,
B11111111,B11000010,B11111111,B11001111,B10000011,B11111111,B11111100,B11111111,B00110000,B01111001,B11011110,B01111111,B11111110,B01110001,B11111100,B00111111,
B11111111,B11000010,B11111111,B11001111,B11100000,B01111111,B11111100,B11111111,B00111111,B01111001,B11011110,B01111111,B11111100,B00000001,B11111100,B00111111,
B11111111,B11000010,B00000111,B11001111,B11111000,B00111111,B11111100,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000111,B11111100,B00111111,
B11111111,B11000011,B11110111,B11001111,B11111111,B00011111,B11111100,B11111111,B00000000,B00000000,B00000000,B00000000,B00000000,B10111111,B11111110,B00011111,
B11111111,B11000011,B11110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B01111001,B11111110,B01111111,B11111111,B10111111,B11111110,B00011111,
B11111111,B11000011,B11000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111111,B01111001,B11111110,B01111111,B11111111,B10111111,B11111111,B00001111,
B11111111,B11000011,B10000011,B11010111,B10011110,B10111100,B11111100,B11111111,B00111110,B01111001,B00000010,B01111111,B11111111,B10111111,B11111111,B00001111,
B11111111,B11000010,B00000111,B11010111,B10011110,B10111100,B11111100,B11111111,B00111000,B11111000,B01111000,B00001111,B11111111,B10111111,B11111111,B00001111,
B11111111,B00000000,B00100111,B11010111,B10011110,B10111100,B11111100,B11111111,B00111011,B11111001,B11111110,B01100111,B11111111,B10111111,B11111111,B00001111,
B11111110,B00000000,B11100111,B11010111,B10011110,B10111100,B11111100,B00000000,B00111011,B11111001,B11111110,B01110001,B11111111,B10111111,B11111111,B10000111,
B11111100,B01000011,B11100111,B11010111,B10011110,B10111100,B00000000,B00000000,B00000000,B00000000,B00000000,B01111100,B11111111,B00111111,B11111111,B10000111,
B11111000,B11000011,B11100111,B11010111,B10011110,B10111100,B11111111,B01011111,B00000000,B00000000,B00000000,B01111110,B01111111,B01111111,B11111111,B10000111,
B11110001,B11000011,B11100111,B11010111,B10011110,B10111100,B11111111,B01011111,B10011111,B01111011,B10110111,B00111111,B00111111,B01111111,B11111111,B10000111,
B11100011,B11000011,B11100111,B11010111,B10011110,B10111100,B11111111,B01011111,B10011111,B01111011,B10110111,B10111111,B10011111,B01111111,B11111111,B10000111,
B11000111,B11000011,B11100111,B11010111,B10011110,B10111100,B11111111,B01011111,B10011111,B01111011,B10110111,B10001111,B11011111,B01111111,B11111111,B10000111,
B11001111,B11000011,B11100111,B11010111,B10011110,B10111100,B11111111,B01011111,B10011110,B01111011,B10110111,B11100111,B11011110,B01111111,B11111111,B10000111,
B11001111,B11000011,B11100111,B11010111,B10011110,B10111100,B11111111,B01011111,B10011110,B11111011,B10110111,B11110011,B11011100,B11111111,B11111111,B10000111,
B11001111,B11000011,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011110,B11111011,B10110111,B11111000,B00000001,B11111111,B11111111,B10000111,
B11001111,B11000011,B11100000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,B11111111,B11000000,B00000000,B00000111,
B11000000,B01000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000000,B00000000,B00000111,
B11001100,B01000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00001111,
B11001100,B01000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00011111,
B11001111,B11000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111000,B00111111,B11111111,B11111111,
B11001111,B11000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11110000,B11111111,B11111111,B11111111,
B11001111,B11000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11100001,B11111100,B00000000,B00000001,
B11001111,B11000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11100001,B11100001,B11111111,B11011101,
B11000000,B01000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11100001,B11101111,B11111111,B11011101,
B11001100,B01000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11100001,B11101111,B11000000,B00011101,
B11001100,B01000011,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11100001,B11101111,B10011111,B11111101,
B11001111,B11000011,B11111111,B10000000,B00000000,B00000000,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11100001,B11100000,B00111111,B11111101,
B11001111,B11000011,B11111111,B00000000,B00000000,B00000000,B00001111,B11111111,B11111111,B11111111,B11111111,B11111111,B11000011,B11101111,B10000000,B00000001,
B11001111,B11000011,B11111110,B00000000,B00000000,B00000000,B00000111,B11111111,B11111111,B11111111,B11111111,B11111111,B10000011,B11101111,B10111100,B11111011,
B11000111,B11000011,B11111100,B00000000,B00000000,B00000000,B00000111,B11111111,B11111111,B11111111,B11111111,B11111111,B00000111,B11101111,B10111100,B11111011,
B11100011,B11000011,B11111000,B00111100,B11111111,B11111111,B10000011,B11111111,B11111111,B11111111,B11111111,B11111110,B00000111,B11100000,B00111100,B00011011,
B11110001,B11000011,B11110000,B01111100,B01111111,B11111111,B10000001,B11111111,B11111111,B11111111,B11111111,B11111100,B00000111,B11111101,B11111100,B00001011,
B11111001,B11000001,B11100000,B11111110,B00111111,B11100001,B11000000,B11111111,B11111111,B11111111,B11111111,B11111000,B00100001,B11111101,B11111000,B11001011,
B11111001,B11100000,B11000001,B11111111,B00011111,B11101101,B11100000,B01111111,B11111111,B11111111,B11111111,B11110000,B01110000,B11111101,B11100000,B11000011,
B11111001,B11110000,B00000011,B11111111,B10000011,B11101101,B11100000,B00011111,B11111111,B11111111,B11111111,B11000000,B11111000,B00111101,B10000111,B11001111,
B11111001,B11111000,B00000111,B11111111,B11000000,B11101101,B11110000,B00000011,B11111111,B11111111,B11111110,B00000001,B11001110,B00001101,B00001111,B11001111,
B11111001,B11111100,B00001111,B11111111,B11111000,B00000000,B00011000,B00000000,B01111111,B11111111,B11111100,B00000011,B11000111,B10000100,B00111111,B10001111,
B11111001,B11111110,B00011111,B10000000,B11111110,B01101111,B11011111,B00000000,B00000000,B00000000,B00000000,B00000111,B11010111,B11100000,B10111111,B00011111,
B11111001,B11111111,B11111111,B00111110,B11111110,B01101111,B11011111,B11100000,B00000000,B00000000,B00000000,B00111111,B10000111,B11100011,B10111110,B00111111,
B11111001,B11111111,B11111100,B11111110,B11111110,B01100000,B00000000,B11111100,B00000000,B00000000,B00000001,B11111110,B00110111,B11100111,B10111100,B01111111,
B11111001,B11111111,B11111001,B11111110,B11111110,B01111111,B11111110,B11111110,B00000000,B00000000,B00000011,B11111000,B11110011,B11100111,B00111100,B11111111,
B11111001,B11111100,B00000011,B11000000,B00000000,B00000000,B00000010,B11111111,B11111111,B11111111,B11111111,B11100011,B11111011,B11100111,B01111100,B11111111,
B11111001,B11111101,B11111111,B10000000,B00000000,B00000000,B01111010,B11111111,B11111111,B11111111,B11111000,B00001111,B11111011,B11100111,B01111100,B11111111,
B11111000,B01111101,B11111111,B10011110,B11111111,B11111111,B01111000,B00000001,B11111111,B11111111,B11111011,B11111111,B11111011,B11100111,B01111100,B11111111,
B11110011,B00011101,B11111111,B10011110,B11111111,B11111111,B00000011,B11111101,B11111111,B11111111,B11110001,B11111111,B11110001,B11000110,B01111000,B01111111,
B11110111,B11000000,B01111111,B10011110,B11111111,B11111111,B11011111,B11111100,B00000000,B00000000,B00000100,B00000000,B00000100,B00000110,B11111011,B01111111,
B11100111,B11111111,B00000000,B00011110,B11111111,B11110000,B00000000,B00111100,B01101000,B00000000,B00000000,B00000100,B00000000,B00001110,B11111011,B01111111,
B11101111,B11111111,B00000000,B00011110,B01111111,B00000000,B11111111,B10000000,B00000000,B00101111,B10111111,B11110001,B11111011,B10111110,B11111011,B01111111,
B11101111,B11111110,B01111011,B11111111,B01111111,B01111110,B00111111,B11111100,B00111111,B00101111,B10011111,B11111011,B11111011,B10111110,B11111011,B01111111,
B11100111,B11111110,B11111001,B11111111,B00000000,B01111111,B10011111,B11111100,B00000000,B00101111,B11011111,B11111011,B11111011,B10111110,B00000011,B01111111,
B11110000,B01111100,B11111100,B11111111,B11111011,B11111111,B11000111,B11111111,B11111111,B11100000,B11010000,B00000011,B11111011,B10111110,B11111111,B01111111,
B11111111,B00000001,B11111111,B00000000,B00000011,B11111111,B11110001,B11111111,B11111111,B11101110,B00000111,B11111000,B00000000,B00000000,B11111111,B01111111,
B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,B00000000,B00001111,B11111111,B11111111,B11111111,B11111110,B00000000,B01111111,
B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,
};



byte getTile(byte x, byte y){
  //Serial.print(y);  Serial.print(" <= y | x => "); Serial.print(x);Serial.print(" || ");
  //le decalage dépend de la position du joueur je divise x/8 car j'ai 8 bit dans un byte. puis je décale du nombre de bit util pour ne garder que le premier
  return (pgm_read_byte(world + (y*16) + x/8) >> (7-((x%8)))& B00000001);
}

void drawWorld(){
   for(byte y = max(0, (camera_y)/16); y < min(WORLD_W, (camera_y+LCDHEIGHT)/16+1); y++){
    for(byte x = max(0, (camera_x)/16); x < min(WORLD_H, (camera_x+LCDWIDTH)/16+1); x++){
      byte spriteID = getTile(x,y);
      if(spriteID == 0)
        continue;
        
        byte numSprite = 2;
       //Verrification des zone de sprite
        for(byte i=0;i<NB_ZONE;i++)
        {
          byte decalage = 5*i;
          byte x1 = pgm_read_byte(Zones + decalage);
          byte y1 = pgm_read_byte(Zones +decalage+1);
          byte x2 = pgm_read_byte(Zones+decalage+2);
          byte y2 = pgm_read_byte(Zones+decalage+3);
          
          if(gb.collidePointRect(x,y,x1,y1,x2-x1,y2-y1))
          {
            numSprite = pgm_read_byte(Zones+decalage+4);
            break;
          }
        }
      //coordinates on the screen depending on the camera position
      int x_screen = x*16 - camera_x;
      int y_screen = y*16 - camera_y;
      gb.display.drawBitmap(x_screen, y_screen, GetSpriteById(numSprite));
    }
  }
  
 
  //Test map 
 /* for(byte y=0;y<128;y++)
    {
        for(byte x=0;x<128;x++)
        {
            Serial.print(getTile(x,y));
        }
          Serial.println("");
    }
  drawTitleScreen();*/
}

void drawMap(){
  /*gb.display.fillRect(0,0,18,18);
  gb.display.setColor(WHITE);
  for(byte y = 0; y < 64; y++){
    for(byte x = 0; x < 64; x++){
      char tile_x = x + player.x/64 - 8;
      char tile_y = y + player.y/64 - 8;
      if(tile_x < 0 || tile_x > WORLD_W || tile_y < 0 || tile_y > WORLD_H)
        continue;
      if(getTile(x + player.x, y + player.y) == 0)
        gb.display.drawPixel(x+1, y+1);
    }
  }
  gb.display.setColor(BLACK);
  gb.display.drawPixel(9,9);*/
}



